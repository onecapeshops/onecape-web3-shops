// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BoughtNFT extends ethereum.Event {
  get params(): BoughtNFT__Params {
    return new BoughtNFT__Params(this);
  }
}

export class BoughtNFT__Params {
  _event: BoughtNFT;

  constructor(event: BoughtNFT) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get isSale(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get isClosed(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get updatedTimeStamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class DelistSale extends ethereum.Event {
  get params(): DelistSale__Params {
    return new DelistSale__Params(this);
  }
}

export class DelistSale__Params {
  _event: DelistSale;

  constructor(event: DelistSale) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get updatedTimeStamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class ListNFT extends ethereum.Event {
  get params(): ListNFT__Params {
    return new ListNFT__Params(this);
  }
}

export class ListNFT__Params {
  _event: ListNFT;

  constructor(event: ListNFT) {
    this._event = event;
  }

  get offeringId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get isSale(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get isClosed(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get updatedTimeStamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class Mint extends ethereum.Event {
  get params(): Mint__Params {
    return new Mint__Params(this);
  }
}

export class Mint__Params {
  _event: Mint;

  constructor(event: Mint) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[1].value.toString();
  }

  get tokenOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get mintTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get forSale(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PutNFTForSale extends ethereum.Event {
  get params(): PutNFTForSale__Params {
    return new PutNFTForSale__Params(this);
  }
}

export class PutNFTForSale__Params {
  _event: PutNFTForSale;

  constructor(event: PutNFTForSale) {
    this._event = event;
  }

  get tokenID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get updatedTimeStamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get transferTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class TransferBatch extends ethereum.Event {
  get params(): TransferBatch__Params {
    return new TransferBatch__Params(this);
  }
}

export class TransferBatch__Params {
  _event: TransferBatch;

  constructor(event: TransferBatch) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class TransferSingle extends ethereum.Event {
  get params(): TransferSingle__Params {
    return new TransferSingle__Params(this);
  }
}

export class TransferSingle__Params {
  _event: TransferSingle;

  constructor(event: TransferSingle) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class URI extends ethereum.Event {
  get params(): URI__Params {
    return new URI__Params(this);
  }
}

export class URI__Params {
  _event: URI;

  constructor(event: URI) {
    this._event = event;
  }

  get value(): string {
    return this._event.parameters[0].value.toString();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateNFTSalePrice extends ethereum.Event {
  get params(): UpdateNFTSalePrice__Params {
    return new UpdateNFTSalePrice__Params(this);
  }
}

export class UpdateNFTSalePrice__Params {
  _event: UpdateNFTSalePrice;

  constructor(event: UpdateNFTSalePrice) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get updatedTimeStamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ShopNFTMint__getNFTDetailsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get tokenURI(): string {
    return this[1].toString();
  }

  get creator(): Address {
    return this[2].toAddress();
  }

  get owner(): Address {
    return this[3].toAddress();
  }

  get timeOfGenerate(): BigInt {
    return this[4].toBigInt();
  }
}

export class ShopNFTMint__getNFTOrderBookDetailsResultValue0Struct extends ethereum.Tuple {
  get listingID(): Bytes {
    return this[0].toBytes();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get forSale(): boolean {
    return this[3].toBoolean();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get updatedTimestamp(): BigInt {
    return this[5].toBigInt();
  }

  get isClosed(): boolean {
    return this[6].toBoolean();
  }
}

export class ShopNFTMint__nftLogsResult {
  value0: BigInt;
  value1: string;
  value2: Address;
  value3: Address;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: string,
    value2: Address,
    value3: Address,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getTokenURI(): string {
    return this.value1;
  }

  getCreator(): Address {
    return this.value2;
  }

  getOwner(): Address {
    return this.value3;
  }

  getTimeOfGenerate(): BigInt {
    return this.value4;
  }
}

export class ShopNFTMint__salesListResult {
  value0: Bytes;
  value1: BigInt;
  value2: Address;
  value3: boolean;
  value4: BigInt;
  value5: BigInt;
  value6: boolean;

  constructor(
    value0: Bytes,
    value1: BigInt,
    value2: Address,
    value3: boolean,
    value4: BigInt,
    value5: BigInt,
    value6: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    return map;
  }

  getListingID(): Bytes {
    return this.value0;
  }

  getId(): BigInt {
    return this.value1;
  }

  getOwner(): Address {
    return this.value2;
  }

  getForSale(): boolean {
    return this.value3;
  }

  getAmount(): BigInt {
    return this.value4;
  }

  getUpdatedTimestamp(): BigInt {
    return this.value5;
  }

  getIsClosed(): boolean {
    return this.value6;
  }
}

export class ShopNFTMint extends ethereum.SmartContract {
  static bind(address: Address): ShopNFTMint {
    return new ShopNFTMint("ShopNFTMint", address);
  }

  BURNER_ROLE(): Bytes {
    let result = super.call("BURNER_ROLE", "BURNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_BURNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("BURNER_ROLE", "BURNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ERC20TokenContract(): Address {
    let result = super.call(
      "ERC20TokenContract",
      "ERC20TokenContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_ERC20TokenContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ERC20TokenContract",
      "ERC20TokenContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  MINTER_ROLE(): Bytes {
    let result = super.call("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MINTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  UPGRADER_ROLE(): Bytes {
    let result = super.call("UPGRADER_ROLE", "UPGRADER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_UPGRADER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "UPGRADER_ROLE",
      "UPGRADER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  URI_SETTER_ROLE(): Bytes {
    let result = super.call(
      "URI_SETTER_ROLE",
      "URI_SETTER_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_URI_SETTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "URI_SETTER_ROLE",
      "URI_SETTER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  balanceOf(account: Address, id: BigInt): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address, id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfBatch(accounts: Array<Address>, ids: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_balanceOfBatch(
    accounts: Array<Address>,
    ids: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  cost(): BigInt {
    let result = super.call("cost", "cost():(uint256)", []);

    return result[0].toBigInt();
  }

  try_cost(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("cost", "cost():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  creator(): Address {
    let result = super.call("creator", "creator():(address)", []);

    return result[0].toAddress();
  }

  try_creator(): ethereum.CallResult<Address> {
    let result = super.tryCall("creator", "creator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeAccount(): Address {
    let result = super.call("feeAccount", "feeAccount():(address)", []);

    return result[0].toAddress();
  }

  try_feeAccount(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeAccount", "feeAccount():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feePercent(): BigInt {
    let result = super.call("feePercent", "feePercent():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feePercent(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("feePercent", "feePercent():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAdminRole(_user: Address): boolean {
    let result = super.call("getAdminRole", "getAdminRole(address):(bool)", [
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toBoolean();
  }

  try_getAdminRole(_user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("getAdminRole", "getAdminRole(address):(bool)", [
      ethereum.Value.fromAddress(_user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getBurnerRole(_user: Address): boolean {
    let result = super.call("getBurnerRole", "getBurnerRole(address):(bool)", [
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toBoolean();
  }

  try_getBurnerRole(_user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getBurnerRole",
      "getBurnerRole(address):(bool)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getItemPrice(_itemId: Bytes): BigInt {
    let result = super.call("getItemPrice", "getItemPrice(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(_itemId)
    ]);

    return result[0].toBigInt();
  }

  try_getItemPrice(_itemId: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getItemPrice",
      "getItemPrice(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_itemId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMaxSupply(): BigInt {
    let result = super.call("getMaxSupply", "getMaxSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getMaxSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getMaxSupply", "getMaxSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMintCost(): BigInt {
    let result = super.call("getMintCost", "getMintCost():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getMintCost(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getMintCost", "getMintCost():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMinterRole(_user: Address): boolean {
    let result = super.call("getMinterRole", "getMinterRole(address):(bool)", [
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toBoolean();
  }

  try_getMinterRole(_user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getMinterRole",
      "getMinterRole(address):(bool)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getNFTDetails(id: BigInt): ShopNFTMint__getNFTDetailsResultValue0Struct {
    let result = super.call(
      "getNFTDetails",
      "getNFTDetails(uint256):((uint256,string,address,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return changetype<ShopNFTMint__getNFTDetailsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getNFTDetails(
    id: BigInt
  ): ethereum.CallResult<ShopNFTMint__getNFTDetailsResultValue0Struct> {
    let result = super.tryCall(
      "getNFTDetails",
      "getNFTDetails(uint256):((uint256,string,address,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ShopNFTMint__getNFTDetailsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getNFTOrderBookDetails(
    id: Bytes
  ): ShopNFTMint__getNFTOrderBookDetailsResultValue0Struct {
    let result = super.call(
      "getNFTOrderBookDetails",
      "getNFTOrderBookDetails(bytes32):((bytes32,uint256,address,bool,uint256,uint256,bool))",
      [ethereum.Value.fromFixedBytes(id)]
    );

    return changetype<ShopNFTMint__getNFTOrderBookDetailsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getNFTOrderBookDetails(
    id: Bytes
  ): ethereum.CallResult<
    ShopNFTMint__getNFTOrderBookDetailsResultValue0Struct
  > {
    let result = super.tryCall(
      "getNFTOrderBookDetails",
      "getNFTOrderBookDetails(bytes32):((bytes32,uint256,address,bool,uint256,uint256,bool))",
      [ethereum.Value.fromFixedBytes(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ShopNFTMint__getNFTOrderBookDetailsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getNextTokenId(): BigInt {
    let result = super.call("getNextTokenId", "getNextTokenId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getNextTokenId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNextTokenId",
      "getNextTokenId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPauserRole(_user: Address): boolean {
    let result = super.call("getPauserRole", "getPauserRole(address):(bool)", [
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toBoolean();
  }

  try_getPauserRole(_user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getPauserRole",
      "getPauserRole(address):(bool)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTokenCirculations(): BigInt {
    let result = super.call(
      "getTokenCirculations",
      "getTokenCirculations():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getTokenCirculations(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTokenCirculations",
      "getTokenCirculations():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(account: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    account: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMinterPaused(): boolean {
    let result = super.call("isMinterPaused", "isMinterPaused():(bool)", []);

    return result[0].toBoolean();
  }

  try_isMinterPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMinterPaused", "isMinterPaused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  listingNonce(): BigInt {
    let result = super.call("listingNonce", "listingNonce():(uint256)", []);

    return result[0].toBigInt();
  }

  try_listingNonce(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("listingNonce", "listingNonce():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxMintAmount(): BigInt {
    let result = super.call("maxMintAmount", "maxMintAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxMintAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxMintAmount",
      "maxMintAmount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxSupply(): BigInt {
    let result = super.call("maxSupply", "maxSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxSupply", "maxSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  metaDataURI(): string {
    let result = super.call("metaDataURI", "metaDataURI():(string)", []);

    return result[0].toString();
  }

  try_metaDataURI(): ethereum.CallResult<string> {
    let result = super.tryCall("metaDataURI", "metaDataURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nextTokenId(): BigInt {
    let result = super.call("nextTokenId", "nextTokenId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextTokenId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nextTokenId", "nextTokenId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nftLogs(param0: BigInt): ShopNFTMint__nftLogsResult {
    let result = super.call(
      "nftLogs",
      "nftLogs(uint256):(uint256,string,address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new ShopNFTMint__nftLogsResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toBigInt()
    );
  }

  try_nftLogs(param0: BigInt): ethereum.CallResult<ShopNFTMint__nftLogsResult> {
    let result = super.tryCall(
      "nftLogs",
      "nftLogs(uint256):(uint256,string,address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ShopNFTMint__nftLogsResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toBigInt()
      )
    );
  }

  nftsInCirculation(): BigInt {
    let result = super.call(
      "nftsInCirculation",
      "nftsInCirculation():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_nftsInCirculation(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nftsInCirculation",
      "nftsInCirculation():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  salesList(param0: Bytes): ShopNFTMint__salesListResult {
    let result = super.call(
      "salesList",
      "salesList(bytes32):(bytes32,uint256,address,bool,uint256,uint256,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new ShopNFTMint__salesListResult(
      result[0].toBytes(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toBoolean(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBoolean()
    );
  }

  try_salesList(
    param0: Bytes
  ): ethereum.CallResult<ShopNFTMint__salesListResult> {
    let result = super.tryCall(
      "salesList",
      "salesList(bytes32):(bytes32,uint256,address,bool,uint256,uint256,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ShopNFTMint__salesListResult(
        value[0].toBytes(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toBoolean(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBoolean()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  trustedForwarder(): Address {
    let result = super.call(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_trustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uri(_id: BigInt): string {
    let result = super.call("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);

    return result[0].toString();
  }

  try_uri(_id: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  versionRecipient(): string {
    let result = super.call(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );

    return result[0].toString();
  }

  try_versionRecipient(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class Burn1Call extends ethereum.Call {
  get inputs(): Burn1Call__Inputs {
    return new Burn1Call__Inputs(this);
  }

  get outputs(): Burn1Call__Outputs {
    return new Burn1Call__Outputs(this);
  }
}

export class Burn1Call__Inputs {
  _call: Burn1Call;

  constructor(call: Burn1Call) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class Burn1Call__Outputs {
  _call: Burn1Call;

  constructor(call: Burn1Call) {
    this._call = call;
  }
}

export class BurnBatchCall extends ethereum.Call {
  get inputs(): BurnBatchCall__Inputs {
    return new BurnBatchCall__Inputs(this);
  }

  get outputs(): BurnBatchCall__Outputs {
    return new BurnBatchCall__Outputs(this);
  }
}

export class BurnBatchCall__Inputs {
  _call: BurnBatchCall;

  constructor(call: BurnBatchCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class BurnBatchCall__Outputs {
  _call: BurnBatchCall;

  constructor(call: BurnBatchCall) {
    this._call = call;
  }
}

export class BurnBatch1Call extends ethereum.Call {
  get inputs(): BurnBatch1Call__Inputs {
    return new BurnBatch1Call__Inputs(this);
  }

  get outputs(): BurnBatch1Call__Outputs {
    return new BurnBatch1Call__Outputs(this);
  }
}

export class BurnBatch1Call__Inputs {
  _call: BurnBatch1Call;

  constructor(call: BurnBatch1Call) {
    this._call = call;
  }

  get _ids(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class BurnBatch1Call__Outputs {
  _call: BurnBatch1Call;

  constructor(call: BurnBatch1Call) {
    this._call = call;
  }
}

export class BurnForMintCall extends ethereum.Call {
  get inputs(): BurnForMintCall__Inputs {
    return new BurnForMintCall__Inputs(this);
  }

  get outputs(): BurnForMintCall__Outputs {
    return new BurnForMintCall__Outputs(this);
  }
}

export class BurnForMintCall__Inputs {
  _call: BurnForMintCall;

  constructor(call: BurnForMintCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _burnIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _burnAmounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _mintIds(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _mintAmounts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class BurnForMintCall__Outputs {
  _call: BurnForMintCall;

  constructor(call: BurnForMintCall) {
    this._call = call;
  }
}

export class DelistFromMarketplaceCall extends ethereum.Call {
  get inputs(): DelistFromMarketplaceCall__Inputs {
    return new DelistFromMarketplaceCall__Inputs(this);
  }

  get outputs(): DelistFromMarketplaceCall__Outputs {
    return new DelistFromMarketplaceCall__Outputs(this);
  }
}

export class DelistFromMarketplaceCall__Inputs {
  _call: DelistFromMarketplaceCall;

  constructor(call: DelistFromMarketplaceCall) {
    this._call = call;
  }

  get _tokenid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _listingId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class DelistFromMarketplaceCall__Outputs {
  _call: DelistFromMarketplaceCall;

  constructor(call: DelistFromMarketplaceCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _trustForwarderAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ListForSaleCall extends ethereum.Call {
  get inputs(): ListForSaleCall__Inputs {
    return new ListForSaleCall__Inputs(this);
  }

  get outputs(): ListForSaleCall__Outputs {
    return new ListForSaleCall__Outputs(this);
  }
}

export class ListForSaleCall__Inputs {
  _call: ListForSaleCall;

  constructor(call: ListForSaleCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenid(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ListForSaleCall__Outputs {
  _call: ListForSaleCall;

  constructor(call: ListForSaleCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get mintAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class MintBatchCall extends ethereum.Call {
  get inputs(): MintBatchCall__Inputs {
    return new MintBatchCall__Inputs(this);
  }

  get outputs(): MintBatchCall__Outputs {
    return new MintBatchCall__Outputs(this);
  }
}

export class MintBatchCall__Inputs {
  _call: MintBatchCall;

  constructor(call: MintBatchCall) {
    this._call = call;
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class MintBatchCall__Outputs {
  _call: MintBatchCall;

  constructor(call: MintBatchCall) {
    this._call = call;
  }
}

export class PauseMintingCall extends ethereum.Call {
  get inputs(): PauseMintingCall__Inputs {
    return new PauseMintingCall__Inputs(this);
  }

  get outputs(): PauseMintingCall__Outputs {
    return new PauseMintingCall__Outputs(this);
  }
}

export class PauseMintingCall__Inputs {
  _call: PauseMintingCall;

  constructor(call: PauseMintingCall) {
    this._call = call;
  }

  get _minting(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class PauseMintingCall__Outputs {
  _call: PauseMintingCall;

  constructor(call: PauseMintingCall) {
    this._call = call;
  }
}

export class PurchaseItemCall extends ethereum.Call {
  get inputs(): PurchaseItemCall__Inputs {
    return new PurchaseItemCall__Inputs(this);
  }

  get outputs(): PurchaseItemCall__Outputs {
    return new PurchaseItemCall__Outputs(this);
  }
}

export class PurchaseItemCall__Inputs {
  _call: PurchaseItemCall;

  constructor(call: PurchaseItemCall) {
    this._call = call;
  }

  get _listingId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PurchaseItemCall__Outputs {
  _call: PurchaseItemCall;

  constructor(call: PurchaseItemCall) {
    this._call = call;
  }
}

export class PutForSaleCall extends ethereum.Call {
  get inputs(): PutForSaleCall__Inputs {
    return new PutForSaleCall__Inputs(this);
  }

  get outputs(): PutForSaleCall__Outputs {
    return new PutForSaleCall__Outputs(this);
  }
}

export class PutForSaleCall__Inputs {
  _call: PutForSaleCall;

  constructor(call: PutForSaleCall) {
    this._call = call;
  }

  get _tokenid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _listingId(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class PutForSaleCall__Outputs {
  _call: PutForSaleCall;

  constructor(call: PutForSaleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SafeBatchTransferFromCall extends ethereum.Call {
  get inputs(): SafeBatchTransferFromCall__Inputs {
    return new SafeBatchTransferFromCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferFromCall__Outputs {
    return new SafeBatchTransferFromCall__Outputs(this);
  }
}

export class SafeBatchTransferFromCall__Inputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeBatchTransferFromCall__Outputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetBurnerRoleCall extends ethereum.Call {
  get inputs(): SetBurnerRoleCall__Inputs {
    return new SetBurnerRoleCall__Inputs(this);
  }

  get outputs(): SetBurnerRoleCall__Outputs {
    return new SetBurnerRoleCall__Outputs(this);
  }
}

export class SetBurnerRoleCall__Inputs {
  _call: SetBurnerRoleCall;

  constructor(call: SetBurnerRoleCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBurnerRoleCall__Outputs {
  _call: SetBurnerRoleCall;

  constructor(call: SetBurnerRoleCall) {
    this._call = call;
  }
}

export class SetERC20TokenContractCall extends ethereum.Call {
  get inputs(): SetERC20TokenContractCall__Inputs {
    return new SetERC20TokenContractCall__Inputs(this);
  }

  get outputs(): SetERC20TokenContractCall__Outputs {
    return new SetERC20TokenContractCall__Outputs(this);
  }
}

export class SetERC20TokenContractCall__Inputs {
  _call: SetERC20TokenContractCall;

  constructor(call: SetERC20TokenContractCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetERC20TokenContractCall__Outputs {
  _call: SetERC20TokenContractCall;

  constructor(call: SetERC20TokenContractCall) {
    this._call = call;
  }
}

export class SetMaxSupplyCall extends ethereum.Call {
  get inputs(): SetMaxSupplyCall__Inputs {
    return new SetMaxSupplyCall__Inputs(this);
  }

  get outputs(): SetMaxSupplyCall__Outputs {
    return new SetMaxSupplyCall__Outputs(this);
  }
}

export class SetMaxSupplyCall__Inputs {
  _call: SetMaxSupplyCall;

  constructor(call: SetMaxSupplyCall) {
    this._call = call;
  }

  get supply(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxSupplyCall__Outputs {
  _call: SetMaxSupplyCall;

  constructor(call: SetMaxSupplyCall) {
    this._call = call;
  }
}

export class SetMintCostCall extends ethereum.Call {
  get inputs(): SetMintCostCall__Inputs {
    return new SetMintCostCall__Inputs(this);
  }

  get outputs(): SetMintCostCall__Outputs {
    return new SetMintCostCall__Outputs(this);
  }
}

export class SetMintCostCall__Inputs {
  _call: SetMintCostCall;

  constructor(call: SetMintCostCall) {
    this._call = call;
  }

  get mintCost(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMintCostCall__Outputs {
  _call: SetMintCostCall;

  constructor(call: SetMintCostCall) {
    this._call = call;
  }
}

export class SetMinterRoleCall extends ethereum.Call {
  get inputs(): SetMinterRoleCall__Inputs {
    return new SetMinterRoleCall__Inputs(this);
  }

  get outputs(): SetMinterRoleCall__Outputs {
    return new SetMinterRoleCall__Outputs(this);
  }
}

export class SetMinterRoleCall__Inputs {
  _call: SetMinterRoleCall;

  constructor(call: SetMinterRoleCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMinterRoleCall__Outputs {
  _call: SetMinterRoleCall;

  constructor(call: SetMinterRoleCall) {
    this._call = call;
  }
}

export class SetPauserRoleCall extends ethereum.Call {
  get inputs(): SetPauserRoleCall__Inputs {
    return new SetPauserRoleCall__Inputs(this);
  }

  get outputs(): SetPauserRoleCall__Outputs {
    return new SetPauserRoleCall__Outputs(this);
  }
}

export class SetPauserRoleCall__Inputs {
  _call: SetPauserRoleCall;

  constructor(call: SetPauserRoleCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPauserRoleCall__Outputs {
  _call: SetPauserRoleCall;

  constructor(call: SetPauserRoleCall) {
    this._call = call;
  }
}

export class SetTokenURIByIDCall extends ethereum.Call {
  get inputs(): SetTokenURIByIDCall__Inputs {
    return new SetTokenURIByIDCall__Inputs(this);
  }

  get outputs(): SetTokenURIByIDCall__Outputs {
    return new SetTokenURIByIDCall__Outputs(this);
  }
}

export class SetTokenURIByIDCall__Inputs {
  _call: SetTokenURIByIDCall;

  constructor(call: SetTokenURIByIDCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenUri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenURIByIDCall__Outputs {
  _call: SetTokenURIByIDCall;

  constructor(call: SetTokenURIByIDCall) {
    this._call = call;
  }
}

export class SetTrustForwarderCall extends ethereum.Call {
  get inputs(): SetTrustForwarderCall__Inputs {
    return new SetTrustForwarderCall__Inputs(this);
  }

  get outputs(): SetTrustForwarderCall__Outputs {
    return new SetTrustForwarderCall__Outputs(this);
  }
}

export class SetTrustForwarderCall__Inputs {
  _call: SetTrustForwarderCall;

  constructor(call: SetTrustForwarderCall) {
    this._call = call;
  }

  get _trustedForwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTrustForwarderCall__Outputs {
  _call: SetTrustForwarderCall;

  constructor(call: SetTrustForwarderCall) {
    this._call = call;
  }
}

export class SetUriCall extends ethereum.Call {
  get inputs(): SetUriCall__Inputs {
    return new SetUriCall__Inputs(this);
  }

  get outputs(): SetUriCall__Outputs {
    return new SetUriCall__Outputs(this);
  }
}

export class SetUriCall__Inputs {
  _call: SetUriCall;

  constructor(call: SetUriCall) {
    this._call = call;
  }

  get _uri(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetUriCall__Outputs {
  _call: SetUriCall;

  constructor(call: SetUriCall) {
    this._call = call;
  }
}

export class SetmaxMintAmountCall extends ethereum.Call {
  get inputs(): SetmaxMintAmountCall__Inputs {
    return new SetmaxMintAmountCall__Inputs(this);
  }

  get outputs(): SetmaxMintAmountCall__Outputs {
    return new SetmaxMintAmountCall__Outputs(this);
  }
}

export class SetmaxMintAmountCall__Inputs {
  _call: SetmaxMintAmountCall;

  constructor(call: SetmaxMintAmountCall) {
    this._call = call;
  }

  get _newmaxMintAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetmaxMintAmountCall__Outputs {
  _call: SetmaxMintAmountCall;

  constructor(call: SetmaxMintAmountCall) {
    this._call = call;
  }
}

export class UpdateSalePriceCall extends ethereum.Call {
  get inputs(): UpdateSalePriceCall__Inputs {
    return new UpdateSalePriceCall__Inputs(this);
  }

  get outputs(): UpdateSalePriceCall__Outputs {
    return new UpdateSalePriceCall__Outputs(this);
  }
}

export class UpdateSalePriceCall__Inputs {
  _call: UpdateSalePriceCall;

  constructor(call: UpdateSalePriceCall) {
    this._call = call;
  }

  get _tokenid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _listingId(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class UpdateSalePriceCall__Outputs {
  _call: UpdateSalePriceCall;

  constructor(call: UpdateSalePriceCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
